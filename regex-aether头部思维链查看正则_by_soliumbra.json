{
    "id": "ca6d2217-4450-4011-8cd6-724783961105",
    "scriptName": "aether头部思维链查看正则 by SoliUmbra",
    "findRegex": "/([\\s\\S]*)<\\/think>/g",
    "replaceString": "```html\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, viewport-fit=cover\" />\n    <title>Aether - 折叠栏</title>\n    <style>\n      * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n      }\n\n      body {\n        font-family: 'Microsoft YaHei', Arial, sans-serif;\n        background: transparent;\n        padding: 6px;\n        margin: 0;\n        display: flex;\n        align-items: flex-start;\n        justify-content: center;\n      }\n\n      .aether-collapsible {\n        width: 100%;\n        background: linear-gradient(140deg, rgba(14, 16, 28, 0.95), rgba(30, 16, 48, 0.9));\n        border-radius: 18px;\n        border: 1px solid rgba(180, 160, 255, 0.18);\n        overflow: hidden;\n        box-shadow: 0 3px 5px rgba(72, 44, 120, 0.35), inset 0 0 0 1px rgba(255, 255, 255, 0.06),\n          inset 0 -2px 3px rgba(255, 255, 255, 0.04);\n        backdrop-filter: blur(3px);\n        -webkit-backdrop-filter: blur(3px);\n        transition: transform 0.28s cubic-bezier(0.4, 0, 0.2, 1), box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);\n        position: relative;\n      }\n\n      .aether-collapsible:hover {\n        transform: translateY(-2px);\n      }\n\n      .aether-collapsible::before {\n        content: '';\n        position: absolute;\n        inset: 0;\n        border-radius: inherit;\n        pointer-events: none;\n        background: radial-gradient(60% 40% at 80% 8%, rgba(150, 110, 255, 0.085), transparent 65%),\n          radial-gradient(70% 50% at 18% 92%, rgba(90, 130, 255, 0.08), transparent 65%),\n          radial-gradient(50% 35% at 50% 30%, rgba(250, 210, 255, 0.05), transparent 70%);\n        mix-blend-mode: screen;\n        z-index: 1;\n        animation: nebulaDrift 18s ease-in-out infinite alternate;\n      }\n\n      @keyframes nebulaDrift {\n        0% {\n          transform: translate3d(0, 0, 0) scale(1);\n        }\n        50% {\n          transform: translate3d(-0.8%, 0.6%, 0) scale(1.01);\n        }\n        100% {\n          transform: translate3d(0, 0, 0) scale(1);\n        }\n      }\n\n      .star-canvas {\n        position: absolute;\n        inset: 0;\n        width: 100%;\n        height: 100%;\n        border-radius: inherit;\n        pointer-events: none;\n        z-index: 0;\n        will-change: transform, opacity; /* OPT: 更平滑 */\n      }\n\n      .aether-header {\n        position: relative;\n        padding: 14px 16px 14px 16px;\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        background: linear-gradient(135deg, rgba(28, 24, 44, 0.6), rgba(36, 24, 58, 0.55));\n        border-bottom: 1px solid rgba(180, 160, 255, 0.16);\n        transition: background 0.28s ease;\n        outline: none;\n        z-index: 2;\n      }\n\n      .aether-header:hover {\n        background: linear-gradient(135deg, rgba(30, 26, 48, 0.75), rgba(40, 26, 62, 0.7));\n      }\n\n      .aether-title {\n        display: flex;\n        align-items: center;\n        gap: 10px;\n        font-size: 16px;\n        font-weight: 700;\n        color: #e9e3ff;\n        letter-spacing: 0.3px;\n        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.35);\n        position: relative;\n      }\n\n      .moon-wrap::after {\n        content: '';\n        position: absolute;\n        width: 42px;\n        height: 42px;\n        border-radius: 50%;\n        background: radial-gradient(\n          circle,\n          rgba(220, 208, 255, 0.35) 0%,\n          rgba(198, 186, 255, 0.22) 40%,\n          rgba(180, 160, 255, 0.12) 60%,\n          transparent 75%\n        );\n        filter: blur(4px);\n        opacity: 0.8;\n        pointer-events: none;\n        z-index: 0;\n        animation: haloPulse 3.6s ease-in-out infinite alternate;\n      }\n\n      .moon-svg {\n        width: 22px;\n        height: 22px;\n        display: block;\n        position: relative;\n        z-index: 2;\n      }\n\n      @keyframes haloPulse {\n        from {\n          transform: scale(0.95);\n          opacity: 0.7;\n        }\n        to {\n          transform: scale(1.05);\n          opacity: 0.95;\n        }\n      }\n\n      .particles {\n        position: absolute;\n        inset: -16px -16px -10px -10px;\n        pointer-events: none;\n        z-index: 1;\n        contain: layout paint; /* OPT: 隔离粒子容器，减少重排带来的抖动 */\n      }\n\n      .particles i {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        width: var(--size, 2px);\n        height: var(--size, 2px);\n        border-radius: 50%;\n        background: radial-gradient(circle at 50% 50%, #fff 0%, #efe9ff 45%, rgba(255, 255, 255, 0) 70%);\n        box-shadow: 0 0 6px rgba(190, 170, 255, 0.9), 0 0 12px rgba(160, 140, 240, 0.6);\n        /* FIX: 使用 translate3d，提升动画稳定性与性能 */\n        transform: translate3d(calc(-50% + var(--x, 0)), calc(-50% + var(--y, 0)), 0) scale(var(--s, 1));\n        opacity: 0;\n        animation: sparkle var(--twinkle, 3.2s) ease-in-out infinite, drift var(--drift, 7.5s) linear infinite;\n        animation-delay: var(--delay, 0s), var(--delay, 0s);\n        will-change: transform, opacity;\n      }\n\n      @keyframes sparkle {\n        0%,\n        90%,\n        100% {\n          opacity: 0;\n        }\n        10% {\n          opacity: 1;\n        }\n        40% {\n          opacity: 0.7;\n        }\n      }\n\n      @keyframes drift {\n        0% {\n          transform: translate3d(calc(-50% + var(--x)), calc(-50% + var(--y)), 0) scale(calc(var(--s, 1) * 0.9));\n        }\n        50% {\n          transform: translate3d(calc(-50% + var(--x) * 1.15), calc(-50% + var(--y) * 1.15), 0)\n            scale(calc(var(--s, 1) * 1.1));\n        }\n        100% {\n          transform: translate3d(calc(-50% + var(--x)), calc(-50% + var(--y)), 0) scale(calc(var(--s, 1) * 0.9));\n        }\n      }\n\n      .toggle-icon {\n        width: 28px;\n        height: 28px;\n        position: relative;\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n        transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);\n        flex-shrink: 0;\n        cursor: pointer;\n        /* 四角星星形状 */\n        clip-path: polygon(50% 0%, 61.8% 38.2%, 100% 50%, 61.8% 61.8%, 50% 100%, 38.2% 61.8%, 0% 50%, 38.2% 38.2%);\n        background: radial-gradient(circle at center, rgba(255, 255, 255, 0.15) 0%, transparent 70%),\n          linear-gradient(135deg, rgba(141, 121, 222, 0.6), rgba(109, 97, 184, 0.4));\n        overflow: hidden;\n      }\n\n      /* 星星内部光晕 */\n      .toggle-icon::after {\n        content: '';\n        position: absolute;\n        inset: 2px;\n        clip-path: inherit;\n        background: radial-gradient(circle at center, rgba(255, 255, 255, 0.25) 0%, transparent 60%);\n        opacity: 0.6;\n        transition: opacity 0.3s ease;\n      }\n\n\n      /* 流光效果 */\n      .toggle-icon .shimmer {\n        position: absolute;\n        inset: 0;\n        clip-path: inherit;\n        background: linear-gradient(\n          45deg,\n          transparent 0%,\n          transparent 40%,\n          rgba(255, 255, 255, 0.6) 50%,\n          rgba(255, 255, 255, 0.8) 52%,\n          rgba(255, 255, 255, 0.6) 54%,\n          transparent 60%,\n          transparent 100%\n        );\n        transform: translateX(-100%);\n        transition: transform 0.6s ease;\n        pointer-events: none;\n      }\n\n      /* 悬停效果 */\n      .toggle-icon:hover {\n        transform: scale(1.08);\n      }\n\n      .toggle-icon:hover::after {\n        opacity: 0.9;\n      }\n\n      /* 展开状态 */\n      .aether-collapsible.expanded .toggle-icon {\n        background: radial-gradient(circle at center, rgba(255, 255, 255, 0.2) 0%, transparent 70%),\n          linear-gradient(135deg, rgba(185, 166, 255, 0.7), rgba(139, 121, 222, 0.5));\n        transform: scale(1.1) rotate(180deg);\n      }\n\n      .aether-collapsible.expanded .toggle-icon::before {\n        transform: rotate(180deg);\n      }\n\n      /* 点击流光动画 */\n      .toggle-icon.clicked .shimmer {\n        transform: translateX(100%);\n      }\n\n      /* 星星闪烁动画 */\n      @keyframes starTwinkle {\n        0%,\n        100% {\n          box-shadow: 0 0 12px rgba(120, 90, 190, 0.3), inset 0 1px 1px rgba(255, 255, 255, 0.2);\n        }\n        50% {\n          box-shadow: 0 0 20px rgba(150, 120, 240, 0.5), 0 0 8px rgba(255, 255, 255, 0.3),\n            inset 0 1px 2px rgba(255, 255, 255, 0.25);\n        }\n      }\n\n      /* 为星星添加微妙的闪烁效果 */\n      .toggle-icon {\n        animation: starTwinkle 4s ease-in-out infinite;\n      }\n\n      /* 展开状态下的脉冲动画 */\n      @keyframes expandedPulse {\n        0%,\n        100% {\n          box-shadow: 0 0 16px rgba(150, 120, 240, 0.6), 0 0 8px rgba(255, 255, 255, 0.3),\n            inset 0 1px 2px rgba(255, 255, 255, 0.25);\n        }\n        50% {\n          box-shadow: 0 0 24px rgba(180, 150, 255, 0.8), 0 0 12px rgba(255, 255, 255, 0.4),\n            inset 0 1px 3px rgba(255, 255, 255, 0.3);\n        }\n      }\n\n      .aether-collapsible.expanded .toggle-icon {\n        animation: expandedPulse 3s ease-in-out infinite;\n      }\n\n      .aether-content {\n        max-height: 0;\n        overflow: hidden;\n        transition: max-height 0.38s cubic-bezier(0.4, 0, 0.2, 1);\n        /* OPT: 降低不透明度，让下方星空若隐若现 */\n        background: linear-gradient(180deg, rgba(18, 16, 28, 0.45), rgba(18, 16, 28, 0.6));\n        position: relative;\n        z-index: 2;\n      }\n\n      /* OPT: 极光/星云覆层，展开时淡入 */\n      .aether-content::before {\n        content: '';\n        position: absolute;\n        inset: 0;\n        pointer-events: none;\n        background: radial-gradient(80% 50% at 95% -10%, rgba(150, 110, 255, 0.18), transparent 65%),\n          radial-gradient(70% 45% at 10% 0%, rgba(90, 130, 255, 0.16), transparent 65%),\n          linear-gradient(180deg, rgba(255, 255, 255, 0.04), rgba(255, 255, 255, 0));\n        mix-blend-mode: screen;\n        opacity: 0;\n        transition: opacity 0.35s ease;\n      }\n\n      .aether-collapsible.expanded .aether-content::before {\n        opacity: 1;\n      }\n\n      .aether-content-inner {\n        padding: 18px;\n        color: #d8d3f6;\n        line-height: 1.65;\n        font-size: 14px;\n        border-top: 1px solid rgba(180, 160, 255, 0.12);\n        position: relative;\n        white-space: pre-wrap;\n        word-wrap: break-word;\n        word-break: break-word;\n        overflow-wrap: break-word;\n        text-shadow: 0 1px 1px rgba(0, 0, 0, 0.25);\n        max-height: 300px;\n        overflow-y: auto;\n      }\n\n      /* 自定义滚动条样式 */\n      .aether-content-inner::-webkit-scrollbar {\n        width: 6px;\n      }\n\n      .aether-content-inner::-webkit-scrollbar-track {\n        background: rgba(30, 26, 48, 0.4);\n        border-radius: 3px;\n      }\n\n      .aether-content-inner::-webkit-scrollbar-thumb {\n        background: linear-gradient(180deg, #8b79de, #6d61b8);\n        border-radius: 3px;\n        box-shadow: 0 0 4px rgba(120, 90, 190, 0.3);\n      }\n\n      .aether-content-inner::-webkit-scrollbar-thumb:hover {\n        background: linear-gradient(180deg, #9d88e5, #8b79de);\n      }\n\n      /* 收起按钮样式 */\n      .aether-collapse {\n        padding: 12px 18px;\n        text-align: center;\n        color: #b8a5ff;\n        font-size: 13px;\n        cursor: pointer;\n        transition: all 0.25s ease;\n        border-top: 1px solid rgba(180, 160, 255, 0.08);\n        position: relative;\n        user-select: none;\n        background: linear-gradient(180deg, rgba(18, 16, 28, 0.3), rgba(18, 16, 28, 0.6));\n      }\n\n      .aether-collapse:hover {\n        color: #d8d3f6;\n        background: linear-gradient(180deg, rgba(22, 18, 32, 0.5), rgba(22, 18, 32, 0.8));\n      }\n\n      .aether-collapse::before {\n        content: '✧';\n        margin-right: 6px;\n        font-size: 11px;\n        opacity: 0.6;\n        filter: drop-shadow(0 0 3px rgba(150, 120, 240, 0.4));\n      }\n\n      .aether-collapse::after {\n        content: '✧';\n        margin-left: 6px;\n        font-size: 11px;\n        opacity: 0.6;\n        filter: drop-shadow(0 0 3px rgba(150, 120, 240, 0.4));\n      }\n\n      .aether-content-inner::before {\n        content: '✧';\n        position: absolute;\n        top: 10px;\n        right: 14px;\n        font-size: 12px;\n        color: #cbb8ff;\n        opacity: 0.7;\n        filter: drop-shadow(0 0 4px rgba(150, 120, 240, 0.6));\n      }\n\n      @media (max-width: 480px) {\n        .aether-collapsible {\n          max-width: 100%;\n          margin: 0 5px;\n          border-radius: 16px;\n        }\n        .aether-header {\n          padding: 12px 14px;\n        }\n        .aether-title {\n          font-size: 15px;\n          gap: 8px;\n        }\n        .moon-wrap {\n          width: 24px;\n          height: 24px;\n        }\n        .moon-svg {\n          width: 20px;\n          height: 20px;\n        }\n        .aether-content-inner {\n          padding: 14px;\n          font-size: 13px;\n        }\n      }\n\n      @media (prefers-reduced-motion: reduce) {\n        .aether-collapsible,\n        .toggle-icon,\n        .toggle-icon::before,\n        .aether-content,\n        .moon-wrap::after,\n        .particles i,\n        .aether-collapsible::before,\n        .toggle-icon .shimmer {\n          animation: none !important;\n          transition: none !important;\n        }\n        .aether-content::before {\n          opacity: 0.8;\n        } /* 保持装饰层，避免突兀 */\n      }\n    </style>\n  </head>\n  <body>\n    <div class=\"aether-collapsible\" id=\"aetherCollapsible\">\n      <canvas class=\"star-canvas\" id=\"starCanvas\" aria-hidden=\"true\"></canvas>\n      <div\n        class=\"aether-header\"\n        onclick=\"toggleCollapsible()\"\n        role=\"button\"\n        aria-expanded=\"false\"\n        aria-controls=\"aetherContent\"\n        tabindex=\"0\"\n      >\n        <div class=\"aether-title\">\n          <span class=\"moon-wrap\" aria-hidden=\"true\">\n            <svg class=\"moon-svg\" viewBox=\"0 0 64 64\" aria-hidden=\"true\">\n              <defs>\n                <radialGradient id=\"crescentGrad\" cx=\"32%\" cy=\"34%\" r=\"70%\">\n                  <stop offset=\"0%\" stop-color=\"#ffffff\" />\n                  <stop offset=\"42%\" stop-color=\"#f6f2ff\" />\n                  <stop offset=\"78%\" stop-color=\"#cec1ff\" />\n                  <stop offset=\"100%\" stop-color=\"#b59fff\" />\n                </radialGradient>\n                <filter id=\"moonGlow\" x=\"-80%\" y=\"-80%\" width=\"260%\" height=\"260%\">\n                  <feGaussianBlur stdDeviation=\"2.8\" result=\"blur\" />\n                  <feMerge>\n                    <feMergeNode in=\"blur\" />\n                    <feMergeNode in=\"SourceGraphic\" />\n                  </feMerge>\n                </filter>\n                <mask id=\"crescentMask\">\n                  <rect x=\"0\" y=\"0\" width=\"64\" height=\"64\" fill=\"black\" />\n                  <circle cx=\"28\" cy=\"32\" r=\"22\" fill=\"white\" />\n                  <circle cx=\"39\" cy=\"28\" r=\"22\" fill=\"black\" />\n                </mask>\n              </defs>\n              <g filter=\"url(#moonGlow)\">\n                <circle cx=\"28\" cy=\"32\" r=\"22\" fill=\"url(#crescentGrad)\" mask=\"url(#crescentMask)\" />\n                <circle\n                  cx=\"28\"\n                  cy=\"32\"\n                  r=\"22\"\n                  fill=\"none\"\n                  stroke=\"rgba(255,255,255,0.35)\"\n                  stroke-width=\"0.7\"\n                  mask=\"url(#crescentMask)\"\n                />\n                <g opacity=\"0.25\" mask=\"url(#crescentMask)\">\n                  <circle cx=\"22\" cy=\"26\" r=\"1.2\" fill=\"#fff\" />\n                  <circle cx=\"24.5\" cy=\"34\" r=\"0.9\" fill=\"#efe9ff\" />\n                  <circle cx=\"30\" cy=\"29\" r=\"0.7\" fill=\"#fff\" />\n                </g>\n              </g>\n            </svg>\n            <span class=\"particles\" aria-hidden=\"true\"></span>\n          </span>\n          Aether\n        </div>\n        <div class=\"toggle-icon\" aria-hidden=\"true\">\n          <div class=\"shimmer\"></div>\n        </div>\n      </div>\n\n      <div class=\"aether-content\" id=\"aetherContent\">\n        <div class=\"aether-content-inner\">$1</div>\n        <div class=\"aether-collapse\" onclick=\"toggleCollapsible()\">收起</div>\n      </div>\n    </div>\n\n    <script>\n      let starApi;\n\n      function toggleCollapsible() {\n        const collapsible = document.getElementById('aetherCollapsible');\n        const header = collapsible.querySelector('.aether-header');\n        const content = document.getElementById('aetherContent');\n        const contentInner = content.querySelector('.aether-content-inner');\n        const collapseButton = content.querySelector('.aether-collapse');\n        const toggleIcon = header.querySelector('.toggle-icon');\n        const isExpanded = collapsible.classList.contains('expanded');\n\n        // 触发流光效果\n        toggleIcon.classList.add('clicked');\n        setTimeout(() => {\n          toggleIcon.classList.remove('clicked');\n        }, 600);\n\n        if (isExpanded) {\n          collapsible.classList.remove('expanded');\n          header.setAttribute('aria-expanded', 'false');\n          content.style.maxHeight = '0px';\n        } else {\n          collapsible.classList.add('expanded');\n          header.setAttribute('aria-expanded', 'true');\n          // 计算内容区域高度：内容区域(最大300px) + 收起按钮高度 + 边框和内边距\n          const innerHeight = Math.min(contentInner.scrollHeight, 300);\n          const buttonHeight = collapseButton.offsetHeight;\n          const totalHeight = innerHeight + buttonHeight + 2; // +2 为border\n          content.style.maxHeight = totalHeight + 'px';\n        }\n        // 稍候再调整 iframe 和星空，减少抖动\n        setTimeout(updateIframeHeight, 420);\n      }\n\n      function updateIframeHeight() {\n        if (starApi && starApi.resize) starApi.resize(); // FIX: 只在尺寸变更时内部真正重排\n        const bodyHeight = document.body.scrollHeight;\n        if (window.parent && window.parent !== window) {\n          window.parent.postMessage({ type: 'resizeIframe', height: bodyHeight }, '*');\n        }\n      }\n\n      function initParticles() {\n        const container = document.querySelector('.particles');\n        if (!container) return;\n        const count = 16;\n        for (let i = 0; i < count; i++) {\n          const p = document.createElement('i');\n          const angle = Math.random() * Math.PI * 2;\n          const radius = 10 + Math.random() * 16;\n          const x = Math.cos(angle) * radius;\n          const y = Math.sin(angle) * radius;\n          const size = 1 + Math.random() * 2.6;\n          const delay = (Math.random() * 2.5).toFixed(2) + 's';\n          const twinkle = (2.4 + Math.random() * 2.4).toFixed(2) + 's';\n          const drift = (6 + Math.random() * 4).toFixed(2) + 's';\n          const scale = (0.8 + Math.random() * 0.6).toFixed(2);\n          p.style.setProperty('--x', x.toFixed(2) + 'px');\n          p.style.setProperty('--y', y.toFixed(2) + 'px');\n          p.style.setProperty('--size', size.toFixed(2) + 'px');\n          p.style.setProperty('--delay', delay);\n          p.style.setProperty('--twinkle', twinkle);\n          p.style.setProperty('--drift', drift);\n          p.style.setProperty('--s', scale);\n          container.appendChild(p);\n        }\n      }\n\n      function initStarCanvas() {\n        const canvas = document.getElementById('starCanvas');\n        if (!canvas) return {};\n        const ctx = canvas.getContext('2d');\n        let w = 0,\n          h = 0,\n          dpr = 1,\n          stars = [],\n          rafId = 0,\n          animate = true;\n        let cssW = 0,\n          cssH = 0; // FIX: 记录上次 CSS 尺寸，避免无变化时重排\n\n        function createStar() {\n          const x = Math.random() * w;\n          const y = Math.random() * h;\n          const r = (Math.random() * 1.1 + 0.3) * dpr;\n          const depth = Math.random();\n          const baseAlpha = 0.45 + Math.random() * 0.45;\n          const amp = 0.25 + Math.random() * 0.35;\n          const tw = 0.0015 + Math.random() * 0.003;\n          const driftX = (0.02 + depth * 0.1) * dpr;\n          const driftY = (0.005 + depth * 0.03) * dpr;\n          const phase = Math.random() * Math.PI * 2;\n          return { x, y, r: r * (0.8 + depth * 0.6), baseAlpha, amp, tw, driftX, driftY, phase };\n        }\n\n        function targetCountFor(area) {\n          return Math.min(220, Math.round(area / 2200));\n        }\n\n        function resize() {\n          const rect = canvas.getBoundingClientRect();\n          const nextDpr = Math.min(window.devicePixelRatio || 1, 2);\n          const nextCssW = rect.width;\n          const nextCssH = rect.height;\n\n          // 没有实际 CSS 尺寸变化则不重排（展开时避免闪烁）\n          if (Math.round(nextCssW) === Math.round(cssW) && Math.round(nextCssH) === Math.round(cssH)) {\n            return;\n          }\n\n          const prevW = w;\n          const prevH = h;\n          const prevDpr = dpr;\n\n          dpr = nextDpr;\n\n          canvas.width = Math.max(1, Math.floor(nextCssW * dpr));\n          canvas.height = Math.max(1, Math.floor(nextCssH * dpr));\n          canvas.style.width = nextCssW + 'px';\n          canvas.style.height = nextCssH + 'px';\n\n          w = canvas.width;\n          h = canvas.height;\n\n          const area = Math.max(1, nextCssW * nextCssH);\n          const target = targetCountFor(area);\n\n          // FIX: 保留并按比例缩放现有星星，避免“乱动”\n          if (prevW > 0 && prevH > 0) {\n            const scaleX = w / prevW;\n            const scaleY = h / prevH;\n            const dprRatio = dpr / (prevDpr || dpr);\n            for (const s of stars) {\n              s.x *= scaleX;\n              s.y *= scaleY;\n              s.r *= dprRatio;\n              s.driftX *= dprRatio;\n              s.driftY *= dprRatio;\n            }\n          }\n\n          // 平滑增减数量（只补差或裁剪，不重建所有）\n          if (stars.length < target) {\n            const toAdd = target - stars.length;\n            for (let i = 0; i < toAdd; i++) stars.push(createStar());\n          } else if (stars.length > target) {\n            stars.length = target;\n          }\n\n          cssW = nextCssW;\n          cssH = nextCssH;\n        }\n\n        function step() {\n          if (!animate) return;\n          ctx.clearRect(0, 0, w, h);\n          for (const s of stars) {\n            s.phase += s.tw;\n            s.x += s.driftX;\n            s.y -= s.driftY * 0.2;\n            if (s.x > w + 2) s.x -= w + 4;\n            if (s.y < -2) s.y += h + 4;\n            const alpha = Math.max(0, Math.min(1, s.baseAlpha + Math.sin(s.phase) * s.amp));\n            ctx.globalAlpha = alpha;\n            const g = ctx.createRadialGradient(s.x, s.y, 0, s.x, s.y, 2.8 * dpr);\n            g.addColorStop(0, 'rgba(255,255,255,1)');\n            g.addColorStop(0.35, 'rgba(236,228,255,0.9)');\n            g.addColorStop(1, 'rgba(170,150,255,0)');\n            ctx.fillStyle = g;\n            ctx.beginPath();\n            ctx.arc(s.x, s.y, 1.4 * dpr + s.r, 0, Math.PI * 2);\n            ctx.fill();\n          }\n          ctx.globalAlpha = 1;\n          rafId = requestAnimationFrame(step);\n        }\n\n        const media = window.matchMedia('(prefers-reduced-motion: reduce)');\n        function updateMotion() {\n          const shouldAnimate = !media.matches;\n          if (shouldAnimate && !animate) {\n            animate = true;\n            cancelAnimationFrame(rafId);\n            rafId = requestAnimationFrame(step);\n          } else if (!shouldAnimate && animate) {\n            animate = false;\n            cancelAnimationFrame(rafId);\n          }\n        }\n\n        // 初次尺寸设定\n        resize();\n        updateMotion();\n        media.addEventListener ? media.addEventListener('change', updateMotion) : media.addListener(updateMotion);\n\n        // 仅在窗口尺寸变更时，才全局 resize\n        window.addEventListener('resize', resize);\n\n        if (animate) rafId = requestAnimationFrame(step);\n        return { resize };\n      }\n\n      document.addEventListener('keydown', function (event) {\n        if (event.key === 'Enter' || event.key === ' ') {\n          const activeElement = document.activeElement;\n          if (activeElement && activeElement.classList.contains('aether-header')) {\n            event.preventDefault();\n            toggleCollapsible();\n          }\n        }\n      });\n\n      document.querySelector('.aether-header').setAttribute('tabindex', '0');\n\n      window.addEventListener('load', () => {\n        initParticles();\n        starApi = initStarCanvas();\n        updateIframeHeight();\n      });\n\n      const contentInnerEl = document.querySelector('.aether-content-inner');\n      const observer = new MutationObserver(() => {\n        const collapsible = document.getElementById('aetherCollapsible');\n        const content = document.getElementById('aetherContent');\n        const collapseButton = content.querySelector('.aether-collapse');\n        if (collapsible.classList.contains('expanded')) {\n          const innerHeight = Math.min(contentInnerEl.scrollHeight, 300);\n          const buttonHeight = collapseButton.offsetHeight;\n          const totalHeight = innerHeight + buttonHeight + 2; // +2 为border\n          content.style.maxHeight = totalHeight + 'px';\n          updateIframeHeight();\n        }\n      });\n      observer.observe(contentInnerEl, { childList: true, subtree: true, characterData: true });\n    </script>\n  </body>\n</html>\n```",
    "trimStrings": [],
    "placement": [
        2
    ],
    "disabled": false,
    "markdownOnly": true,
    "promptOnly": false,
    "runOnEdit": true,
    "substituteRegex": 0,
    "minDepth": null,
    "maxDepth": 1
}